# Resources {.unnumbered}

## Goals and Outcomes

* Summarize the functionality of modern **R** packages for handling spatial data.
* Discuss the retirement of `rgdal`, `rgeos`, and `maptools` and its effect on the rest of the spatial data ecosystem in **R**.
* Provide additional resources for handling spatial data in **R**

## `sf`

The `sf` **R** package [@pebesma2018sf] implements an **R**-based approach to handling spatial data based on simple features, a set of standards that specify how spatial objects are represented by computers. The simple features standards are widely implemented in spatial databases like GIS and GDAL. They have a `geometry` that describes their location on Earth using a coordinate reference system. Simple features objects in **R** are called `sf` objects and build upon **R**'s standard data frame by adding `geometry`. `sf` objects have two main components:

1. A `data.frame` with feature attributes
2. A list-column with geometries for each feature

You can operate on `sf` objects just as you would a operate on a `data.frame`, and there are many tidyverse operations (e.g., `select()`, `filter()`) that work directly with `sf` objects. All `sf` functions that operate on spatial data are prefixed by `st_`, which refers to *spatial type*. The prefix makes them easy to find via tab (or command-line) completion. For example, to inspect the `sf` function's geometry as well-known text, run `st_geometry()`. 

The `sf` **R** package is the modern approach to manipulating spatial data in **R** using simple features and is designed to completely supersede `sp`. For more of `sf`, [visit their website here](https://r-spatial.github.io/sf/) or [this overview here](https://r-spatial.org/book/07-Introsf.html#sec-sfintro).

## `terra`

The `terra` **R** package [@hijmans2023terra] is used to create, read, manipulate, and write raster data. Raster data is a spatial data structure that divides a region into rectangles called "cells" or "pixels" that can store one or more values fore each cell. Raster data structures are often called "grids", a contrast with the "vector" data used to represent points, lines, and polygons as in the `sf` package. One advantage of the `terra` package and raster data structures is that it can handle large data sets on disk that are too large to be loaded into memory.

Raster objects in `terra` are typically created or read in using the `rast()` function. Raster objects in `terra` support common algebraic operations (e.g., `+`, `*`), logical operations (e.g., `>=`, `==`), and functionals (e.g., `round`, `log`) on raster cells. There are several options for modifying raster objects: `crop`, which subsets a larger `terra` object; `trim`, which removes outer rows and columns with `NA` values; `extend`, which adds outer rows and columns with `NA` values, `merge`, which merges two or more raster objects into a single object; `aggregate` and `disagg` for changing the resolution (cell size) of a raster object; `wrap` for transforming to a new coordinate reference system; and more. There are also options for computing distances, summary statistics, prediction, and visualization.

The `terra` **R** package is the modern approach to manipulating raster data in **R** and is designed to completely supersede `raster``. For more of `terra`, [visit their website here](https://rspatial.org/pkg/index.html).

## Other Useful Spatial Data Packages

* `stars` for handling spatio-temporal vector and raster data ([link here](https://r-spatial.github.io/stars/))
* `leaflet` for an **R** package that accesses leaflet, a population JavaScript library for interactive maps ([link here](https://rstudio.github.io/leaflet/))
* `tmap` for generating thematic maps in **R**  for ([link here](https://r-tmap.github.io/tmap/))
* `mapview` for a different approach to interacting with the leaflet Javascript library ([link here](https://github.com/r-spatial/mapview))
* `ggplot2` for general graphics in **R** ([link here](https://ggplot2.tidyverse.org/)), with a focus on `geom_sf()` ([link here](https://ggplot2.tidyverse.org/reference/ggsf.html))

## Retirement of `rgdal`, `rgeos`, and `maptools`; Plan for `sp`

The `rgdal`, `rgeos`, and `maptools` **R** packages won't be available on CRAN after October, 2023. Preparation for these retirements has been worked on for quite some time and is one of the motivating factors in pursuing modern alternatives like `sf` and `terra`. The `sp` package will still be available from CRAN, but it won't be actively maintained, and `sf` should be used instead. To learn more about these retirements and understand how you may be affected, [visit this link here](https://geocompx.org/post/2023/rgdal-retirement/).


## R Spatial Resources

* [**Spatial Data Science With Applications in R**](https://r-spatial.org/book/)
* [**R Spatial - Spatial Data Science with R**](http://rspatial.org/spatial/)
* [**Geocomputation with R**](https://r.geocompx.org/)
* [R-Spatial Task View](https://cran.r-project.org/web/views/Spatial.html)
* [R-Spatial Website](https://r-spatial.org/)
* [**Modern Geospatial Data Analysis with R by Zev Ross**](http://files.zevross.com/workshops/spatial/slides/html/0-deck-list.html)
[**Spatial Statistics for Data Science: Theory and Practice with R](https://www.paulamoraga.com/book-spatial/index.html)
* [**SIGR2021 Summer School**](https://nowosad.github.io/SIGR2021/)
* [**Spatial Data Science - Pebesma and Bivand**](https://keen-swartz-3146c4.netlify.com/)
* [**Spatial Data Science Course- Prof. Adam Wilson**](http://adamwilson.us/SpatialDataScience/index.html)
* [**Introduction to Mapping and Spatial Analysis with R**](https://cengel.github.io/rspatial/)
* [**R Spatial Workshop for EPA R User Group**](https://mhweber.github.io/R-User-Group-Spatial-Workshop-2018/index.html)
* [**Intro to GIS and Spatial Analysis by Manuel Gimond**](https://mgimond.github.io/Spatial/index.html)
* [**FOSS4G2019 R for Geospatial Processing**](https://bakaniko.github.io/FOSS4G2019_Geoprocessing_with_R_workshop/)
* [**An Introduction to Spatial Analysis and Mapping in R**](https://bookdown.org/lexcomber/brunsdoncomber2e/)
* [Earth Analytics Spatial Data in R](https://www.earthdatascience.org/courses/earth-analytics/spatial-data-r/)
* [Hydroinformatics at VT](https://vt-hydroinformatics.github.io/rgeospatial.html): Extensive Notes and exercises for a course on data analysis techniques in hydrology using the programming language R

## R Vector Processing / Simple Features Resources
* [**Simple Features for R**](https://r-spatial.github.io/sf/index.html)
* [**Spatial Data in R: New Directions**](https://edzer.github.io/UseR2017/)
* [**sp-sf Migration**](https://github.com/r-spatial/sf/wiki/Migrating)
* [**An Exploration of Simple Features for R**](https://www.jessesadler.com/post/simple-feature-objects/)
* [**Simple Features: Building Spatial Data Pipelines in R**](https://www.azavea.com/blog/2017/08/30/spatial-analysis-pipelines-in-r-with-simple-features/)
* [**Tidy spatial data in R: using dplyr, tidyr, and ggplot2 with sf**](http://strimas.com/r/tidy-sf/)

## R Raster Resources
* [**terra**](https://github.com/rspatial/terra)
* [Spatial Data Science with R and terra](https://rspatial.org/terra/index.html)
* [**stars - spatiotemporal arrays**](https://r-spatial.github.io/stars/)
* [Wageningen University **Intro to Raster**](http://geoscripting-wur.github.io/IntroToRaster/)
* [Wageningen University **Advanced Raster Analysis**](https://geoscripting-wur.github.io/AdvancedRasterAnalysis/)
* [**The Visual Raster Cheat Sheet GitHub Repo**](https://github.com/etiennebr/visualraster)
* [**Rastervis**](https://oscarperpinan.github.io/rastervis/)


## R Mapping Resources
* [**mapview**](https://r-spatial.github.io/mapview/)
* [**Leaflet for R**](https://rstudio.github.io/leaflet/)
* [**tmap**](https://github.com/mtennekes/tmap)
* [Zev Ross **Creating beautiful demographic maps in R with the `tidycensus` and `tmap` packages**](http://zevross.com/blog/2018/10/02/creating-beautiful-demographic-maps-in-r-with-the-tidycensus-and-tmap-packages/)
* [Geocomputation with R: **Making maps with R**](https://geocompr.robinlovelace.net/adv-map.html)
* [Nico Hahn: **Making Maps with R R**](https://bookdown.org/nicohahn/making_maps_with_r5/docs/introduction.html)

## Web Services in R
* [Accessing REST API (JSON data) using httr and jsonlite](https://rstudio-pubs-static.s3.amazonaws.com/480665_ba2655419209496dbb799f1c7d050673.html)
* [Working with Geospatial Hydrologic Data Using Web Services (R)](https://mikejohnson51.github.io/IOW2022_R/slides.html)

## General R Resources
* [**Google R Style Guide**](https://google.github.io/styleguide/Rguide.xml)
* [**Advanced R by Hadley Wickham**](http://adv-r.had.co.nz/)
* [**R for Data Science**](https://r4ds.had.co.nz/)


## Previous R Spatial Workshops

