[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spatial Data Workshop",
    "section": "",
    "text": "Welcome\nHello and welcome! The purpose of this site is to provide workshop materials for the Spatial Data workshop at the 2023 EPA R User Group Workshop. Slides that accompany this workshop are available for download linked here by clicking the “Download raw file” button via the ellipsis or downward arrow symbol on the right side of the screen."
  },
  {
    "objectID": "index.html#workshop-agenda",
    "href": "index.html#workshop-agenda",
    "title": "Spatial Data Workshop",
    "section": "Workshop Agenda",
    "text": "Workshop Agenda\n\n1:00pm - 1:45pm EDT: Introduction and Spatial Data Structures in R\n1:45pm - 2:15pm EDT: Vector Data Model\n2:15pm - 2:20pm Break\n2:20pm - 2:35pm EDT: Raster Data Model\n2:35pm - 2:45pm Break\n2:45pm - 3:15pm EDT:\n3:15pm - 3:20pm Break\n3:20pm - 3:45pm EDT:\n3:45pm - 4:15pm EDT:\n4:15pm - 4:45pm EDT:\n4:45pm - 5:00pm EDT:"
  },
  {
    "objectID": "index.html#author-introduction",
    "href": "index.html#author-introduction",
    "title": "Spatial Data Workshop",
    "section": "Author Introduction",
    "text": "Author Introduction\nMarc Weber is a geographer at the Pacific Ecological Systems Division (PESD) at the United States Environmental Protection Agency (USEPA). His work supports various aspects of the USEPA’s National Aquatic Resource Surveys (NARS), which characterize the condition of waters across the United States, as he helped develop and maintains the StreamCat and LakeCat datasets. His work focuses on spatial analysis in R and Python, Geographic Information Science (GIS), aquatic ecology, remote sensing, open source science and environmental modeling\nMichael Dumelle is a statistician for the United States Environmental Protection Agency (USEPA). He works primarily on facilitating the survey design and analysis of USEPA’s National Aquatic Resource Surveys (NARS), which characterize the condition of waters across the United States. His primary research interests are in spatial statistics, survey design, environmental and ecological applications, and software development."
  },
  {
    "objectID": "index.html#set-up",
    "href": "index.html#set-up",
    "title": "Spatial Data Workshop",
    "section": "Set Up",
    "text": "Set Up\nThe packages that we use throughout this workshop are listed below. To install and load them, run:\n\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)"
  },
  {
    "objectID": "index.html#how-to-follow-along-with-material",
    "href": "index.html#how-to-follow-along-with-material",
    "title": "Spatial Data Workshop",
    "section": "How to follow along with material",
    "text": "How to follow along with material\nThis workshop was built using Quarto and bookdown and rendered to html. If you are familiar with using git and GitHub, you can fork and clone this repository, or simply clone directly and open the corresponding .qmd files to follow along with material in RStudio. You can also copy code snippets from the rendered book site and paste into your code files in RStudio.\nQuarto is a multi-language, next generation version of R Markdown from RStudio, with many new features and capabilities. Like R Markdown, Quarto uses Knitr to execute R code, and it can render most existing Rmd files without modification. Like RMarkdown the benefits include:\n\nAllows for reproducible reporting from R\nYou write your document in markdown and embed executable code chunks using the knitr syntax\nYou can update your document at any time by re-knitting the code chunks and convert your document to a number of formats (i.e. html, pdf, word documents)\nWe assume everyone in the workshop is familiar with using RStudio"
  },
  {
    "objectID": "index.html#disclaimer",
    "href": "index.html#disclaimer",
    "title": "Spatial Data Workshop",
    "section": "Disclaimer",
    "text": "Disclaimer\nThe views expressed in this manuscript are those of the authors and do not necessarily represent the views or policies of the U.S. Environmental Protection Agency. Any mention of trade names, products, or services does not imply an endorsement by the U.S. government or the U.S. Environmental Protection Agency. The U.S. Environmental Protection Agency does not endorse any commercial products, services, or enterprises."
  },
  {
    "objectID": "foundations.html#goals-and-outcomes",
    "href": "foundations.html#goals-and-outcomes",
    "title": "1  Foundations",
    "section": "1.1 Goals and Outcomes",
    "text": "1.1 Goals and Outcomes\n\nUnderstand fundamental spatial data structures and libraries in R.\nBecome familiar with coordinate reference systems.\nPerform some fundamental spatial operations in R.\nGeographic I/O\n\nWe’ll start by installing and loading some of the primary libraries for working with spatial data in R and examining spatial data structures in R."
  },
  {
    "objectID": "foundations.html#spatial-data-structures-in-r",
    "href": "foundations.html#spatial-data-structures-in-r",
    "title": "1  Foundations",
    "section": "1.2 Spatial Data Structures in R",
    "text": "1.2 Spatial Data Structures in R\n\n\n\n\n\n\nNote\n\n\n\nA few core libraries underpin spatial libraries in R (and Python!) and in GIS software applications such as QGIS and ArcPro. Spatial data structures across languages and applications are primarily organized through OSgeo and OGC). These core libraries include:\n\nGDAL –> For raster and feature abstraction and process\nPROJ –> A library for coordinate transformations and projections\nGEOS –> A Planar geometry engine for operations (measures, relations) such as calculating buffers and centroids on data with a projected CRS\nS2 –> a spherical geometry engine written in C++ developed by Google and adapted in R with the s2 package\n\n\n\n\n1.2.1 Simple features and geospatial grids\n\n*Vector data are comprised of points, lines, and polygons that represent discrete spatial entities, such as a river, watershed, or stream gauge.\nRaster data divides spaces into rectilinear cells (pixels) to represent spatially continuous phenomena, such as elevation or the weather. The cell size (or resolution) defines the fidelity of the data.\n\n\n\n\n\n\n\n\n\n\n\n\n1.2.2 Vector Data Model\nFor Vector data, Simple Features (officially Simple Feature Access) is both an OGC and International Organization for Standardization (ISO) standard that specifies how (mostly) two-dimensional geometries can represent and describe objects in the real world. The Simple Features specification includes:\n\na class hierarchy\na set of operations\nbinary and text encodings\n\nIt describes how such objects can be stored in and retrieved from databases, and which geometrical operations should be defined for them.\nIt outlines how the spatial elements of POINTS (XY locations with a specific coordinate reference system) extend to LINES, POLYGONS and GEOMETRYCOLLECTION(s).\nThe “simple” adjective also refers to the fact that the line or polygon geometries are represented by sequences of points connected with straight lines that do not self-intersect.\n\n\n\n\n\n\n\n\n\n\n1.2.2.1 Simple and valid geometries and ring direction\nThis breakdown of simple features follows for the most part this section in Spatial Data Science For linestrings to be considered simple they must not self-intersect:\n\nlibrary(sf)\n(ls <- st_linestring(rbind(c(0,0), c(1,1), c(2,2), c(0,2), c(1,1), c(2,0))))\n\n\n\n\n\n\n\n#> is_simple \n#>     FALSE\n\nFor polygons several other conditions have to be met to be simple:\n\npolygon rings are closed (the last point equals the first)\npolygon holes (inner rings) are inside their exterior ring\npolygon inner rings maximally touch the exterior ring in single points, not over a line\na polygon ring does not repeat its own path\nin a multi-polygon, an external ring maximally touches another exterior ring in single points, not over a line\n\nz and m coordinates As well as having the necessary X and Y coordinates, single point (vertex) simple features can have:\n\na Z coordinate, denoting altitude, and/or\nan M value, denoting some “measure”\n\nText and binary encodings A key part of the standard feature encoding is text and binary encodings. The well-known text (WKT) encoding we have shown above gives us a human-readable description of the geometry. The well-known binary (WKB) encoding is machine-readable, lossless, and faster to work with than text encoding. WKB is used for all interactions with GDAL and GEOS.\nOperations on geometries We can break down operations on geometries for vector features in the following way:\n\npredicates: a logical asserting a certain property is TRUE\nmeasures: a quantity (a numeric value, possibly with measurement unit)\ntransformations: newly generated geometries\n\nWe can look at these operations by what they operate on, whether the are single geometries, pairs, or sets of geometries:\n\nunary when it’s a single geometry\nbinary when it’s pairs of geometries\nn-ary when it’s sets of geometries\n\nUnary predicates work to describe a property of a geometry.\nA list of unary predicates:\n\n\n\npredicate\nmeaning\n\n\n\n\nis\nTests if geometry belongs to a particular class\n\n\nis_simple\nTests whether geometry is simple\n\n\nis_valid\nTest whether geometry is valid\n\n\nis_empty\nTests if geometry is empty\n\n\n\nA list of binary predicates is:\n\n\n\n\n\n\n\n\npredicate\nmeaning\ninverse of\n\n\n\n\ncontains\nNone of the points of A are outside B\nwithin\n\n\ncontains_properly\nA contains B and B has no points in common with the boundary of A\n\n\n\ncovers\nNo points of B lie in the exterior of A\ncovered_by\n\n\ncovered_by\nInverse of covers\n\n\n\ncrosses\nA and B have some but not all interior points in common\n\n\n\ndisjoint\nA and B have no points in common\nintersects\n\n\nequals\nA and B are topologically equal: node order or number of nodes may differ; identical to A contains B and A within B\n\n\n\nequals_exact\nA and B are geometrically equal, and have identical node order\n\n\n\nintersects\nA and B are not disjoint\ndisjoint\n\n\nis_within_distance\nA is closer to B than a given distance\n\n\n\nwithin\nNone of the points of B are outside A\ncontains\n\n\ntouches\nA and B have at least one boundary point in common, but no interior points\n\n\n\noverlaps\nA and B have some points in common; the dimension of these is identical to that of A and B\n\n\n\nrelate\nGiven a mask pattern, return whether A and B adhere to this pattern\n\n\n\n\nSee the Geometries chapter of Spatial Data Science for a full treatment that also covers **unary and binary measures* as well as unary, binary and n-ary transformers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\nPlot the iris data\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nplot(iris)\n\n\n\n\n\n\n\n\n\n\n1.2.3 Coordinate Reference Systems\n\n\n1.2.4 Raster\n\n\n1.2.5 Geographic Data I/O"
  },
  {
    "objectID": "geoprocessing.html#goals-and-outcomes",
    "href": "geoprocessing.html#goals-and-outcomes",
    "title": "2  Geoprocessing",
    "section": "2.1 Goals and Outcomes",
    "text": "2.1 Goals and Outcomes\n\nThis is goal 1.\nThis is goal 2.\nThis is goal 3.\n\n\n\n\n\n\n\nNote\n\n\n\nYou may click on any of the functions in this book to be directed to their respective documentation. For example, clicking on st_join() takes you to the documentation page for the st_join() function on the sf website."
  },
  {
    "objectID": "geoprocessing.html#spatial-subsetting",
    "href": "geoprocessing.html#spatial-subsetting",
    "title": "2  Geoprocessing",
    "section": "2.2 Spatial Subsetting",
    "text": "2.2 Spatial Subsetting"
  },
  {
    "objectID": "geoprocessing.html#spatial-join",
    "href": "geoprocessing.html#spatial-join",
    "title": "2  Geoprocessing",
    "section": "2.3 Spatial Join",
    "text": "2.3 Spatial Join"
  },
  {
    "objectID": "geoprocessing.html#dissolve",
    "href": "geoprocessing.html#dissolve",
    "title": "2  Geoprocessing",
    "section": "2.4 Dissolve",
    "text": "2.4 Dissolve"
  },
  {
    "objectID": "geoprocessing.html#extract-and-zonal-statistics",
    "href": "geoprocessing.html#extract-and-zonal-statistics",
    "title": "2  Geoprocessing",
    "section": "2.5 Extract and Zonal Statistics",
    "text": "2.5 Extract and Zonal Statistics"
  },
  {
    "objectID": "geoprocessing.html#fixing-topology-errors",
    "href": "geoprocessing.html#fixing-topology-errors",
    "title": "2  Geoprocessing",
    "section": "2.6 Fixing topology errors",
    "text": "2.6 Fixing topology errors\n\nshow typical fixes for topology errors\n\n\n\n\n\n\n\nNote\n\n\n\nYou may encounter errors like this when running geoprocessing operations like st_join in R:\nError in wk_handle.wk_wkb(wkb, s2_geography_writer(oriented\n= oriented,  :  Loop 0 is not valid: Edge 772 crosses edge 774\nRunning st_make_valid might not fix.\nYou may need to turn off spherical geometry - sf_use_s2(TRUE), run st_make_valid, and then turn spherical geometry back on - sf_use_s2(FALSE) See background on S2 here and discussion of S2 related issues here"
  },
  {
    "objectID": "visualization.html#goals-and-outcomes",
    "href": "visualization.html#goals-and-outcomes",
    "title": "3  Visualization",
    "section": "3.1 Goals and Outcomes",
    "text": "3.1 Goals and Outcomes\n\nUnderstand how to use several of the most popular libraries for plotting and visualizing spatial data inR\nThis is goal 2.\nThis is goal 3.\n\n\n\n\n\n\n\nNote\n\n\n\nYou may click on any of the functions in this book to be directed to their respective documentation. For example, clicking on st_join() takes you to the documentation page for the st_join() function on the sf website."
  },
  {
    "objectID": "visualization.html#mapview",
    "href": "visualization.html#mapview",
    "title": "3  Visualization",
    "section": "3.2 mapview",
    "text": "3.2 mapview"
  },
  {
    "objectID": "visualization.html#leaflet",
    "href": "visualization.html#leaflet",
    "title": "3  Visualization",
    "section": "3.3 leaflet",
    "text": "3.3 leaflet"
  },
  {
    "objectID": "visualization.html#ggplot2",
    "href": "visualization.html#ggplot2",
    "title": "3  Visualization",
    "section": "3.4 ggplot2",
    "text": "3.4 ggplot2"
  },
  {
    "objectID": "visualization.html#tmap",
    "href": "visualization.html#tmap",
    "title": "3  Visualization",
    "section": "3.5 tmap",
    "text": "3.5 tmap\nIt uses the same syntax as ggplot: the grammar of graphics - it supports both static and interactive modes"
  },
  {
    "objectID": "advanced_applications.html#goals-and-outcomes",
    "href": "advanced_applications.html#goals-and-outcomes",
    "title": "4  Advanced Applications",
    "section": "4.1 Goals and Outcomes",
    "text": "4.1 Goals and Outcomes\n\nThis is goal 1.\nThis is goal 2.\nThis is goal 3.\n\n\n\n\n\n\n\nNote\n\n\n\nYou may click on any of the functions in this book to be directed to their respective documentation. For example, clicking on st_join() takes you to the documentation page for the st_join() function on the sf website."
  },
  {
    "objectID": "advanced_applications.html#advanced-applications",
    "href": "advanced_applications.html#advanced-applications",
    "title": "4  Advanced Applications",
    "section": "4.2 Advanced Applications",
    "text": "4.2 Advanced Applications\n\n4.2.1 Using Web Services"
  },
  {
    "objectID": "resources.html#r-spatial-resources",
    "href": "resources.html#r-spatial-resources",
    "title": "Resources",
    "section": "R Spatial Resources",
    "text": "R Spatial Resources\n\nR Spatial - Spatial Data Science with R\nGeocomputation with R\nR Spatial Task View\nModern Geospatial Data Analysis with R by Zev Ross\nSIGR2021 Summer School\nSpatial Data Science - Pebesma and Bivand\nSpatial Data Science Course- Prof. Adam Wilson\nIntroduction to Mapping and Spatial Analysis with R\nR Spatial Workshop for EPA R User Group\nIntro to GIS and Spatial Analysis by Manuel Gimond\nFOSS4G2019 R for Geospatial Processing\nAn Introduction to Spatial Analysis and Mapping in R\nEarth Analytics Spatial Data in R\nHydroinformatics at VT: Extensive Notes and exercises for a course on data analysis techniques in hydrology using the programming language R"
  },
  {
    "objectID": "resources.html#r-vector-processing-simple-features-resources",
    "href": "resources.html#r-vector-processing-simple-features-resources",
    "title": "Resources",
    "section": "R Vector Processing / Simple Features Resources",
    "text": "R Vector Processing / Simple Features Resources\n\nSimple Features for R\nSpatial Data in R: New Directions\nsp-sf Migration\nAn Exploration of Simple Features for R\nSimple Features: Building Spatial Data Pipelines in R\nTidy spatial data in R: using dplyr, tidyr, and ggplot2 with sf"
  },
  {
    "objectID": "resources.html#r-raster-resources",
    "href": "resources.html#r-raster-resources",
    "title": "Resources",
    "section": "R Raster Resources",
    "text": "R Raster Resources\n\nterra\nSpatial Data Science with R and terra\nstars - spatiotemporal arrays\nWageningen University Intro to Raster\nWageningen University Advanced Raster Analysis\nThe Visual Raster Cheat Sheet GitHub Repo\nRastervis"
  },
  {
    "objectID": "resources.html#r-mapping-resources",
    "href": "resources.html#r-mapping-resources",
    "title": "Resources",
    "section": "R Mapping Resources",
    "text": "R Mapping Resources\n\nmapview\nLeaflet for R\ntmap\nZev Ross Creating beautiful demographic maps in R with the tidycensus and tmap packages\nGeocomputation with R: Making maps with R\nNico Hahn: Making Maps with R R"
  },
  {
    "objectID": "resources.html#web-services-in-r",
    "href": "resources.html#web-services-in-r",
    "title": "Resources",
    "section": "Web Services in R",
    "text": "Web Services in R\n\nAccessing REST API (JSON data) using httr and jsonlite\nWorking with Geospatial Hydrologic Data Using Web Services (R)"
  },
  {
    "objectID": "resources.html#general-r-resources",
    "href": "resources.html#general-r-resources",
    "title": "Resources",
    "section": "General R Resources",
    "text": "General R Resources\n\nGoogle R Style Guide\nAdvanced R by Hadley Wickham"
  }
]